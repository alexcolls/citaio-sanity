'use strict';

var React = require('react');
var DocumentPaneContext = require('@sanity/desk-tool/lib/panes/document/DocumentPaneContext');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var ui = require('@sanity/ui');
var icons = require('@sanity/icons');
var _taggedTemplateLiteral = require('@babel/runtime/helpers/taggedTemplateLiteral');
var styled = require('styled-components');
var customFlagComponents = require('part:@sanity/document-internationalization/ui/flags?');
var config = require('config:@sanity/document-internationalization');
var schemas = require('part:@sanity/base/schema');
var client = require('part:@sanity/base/client');
var _asyncToGenerator = require('@babel/runtime/helpers/asyncToGenerator');
var _regeneratorRuntime = require('@babel/runtime/regenerator');
var languagesLoaderFn = require('part:@sanity/document-internationalization/languages/loader?');
require('lodash');
require('@sanity/types');
var reactHooks = require('@sanity/react-hooks');
var shouldReloadFn = require('part:@sanity/document-internationalization/languages/should-reload?');
var documentStore = require('part:@sanity/base/datastore/document');
var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var _extends = require('@babel/runtime/helpers/extends');
var color = require('@sanity/color');
var deskTool = require('@sanity/desk-tool');
var RouterContext = require('@sanity/state-router/lib/RouterContext');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);
var _taggedTemplateLiteral__default = /*#__PURE__*/_interopDefaultLegacy(_taggedTemplateLiteral);
var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);
var customFlagComponents__namespace = /*#__PURE__*/_interopNamespace(customFlagComponents);
var config__default = /*#__PURE__*/_interopDefaultLegacy(config);
var schemas__default = /*#__PURE__*/_interopDefaultLegacy(schemas);
var client__default = /*#__PURE__*/_interopDefaultLegacy(client);
var _asyncToGenerator__default = /*#__PURE__*/_interopDefaultLegacy(_asyncToGenerator);
var _regeneratorRuntime__default = /*#__PURE__*/_interopDefaultLegacy(_regeneratorRuntime);
var languagesLoaderFn__default = /*#__PURE__*/_interopDefaultLegacy(languagesLoaderFn);
var shouldReloadFn__default = /*#__PURE__*/_interopDefaultLegacy(shouldReloadFn);
var documentStore__default = /*#__PURE__*/_interopDefaultLegacy(documentStore);
var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);
var _extends__default = /*#__PURE__*/_interopDefaultLegacy(_extends);

var objectSafeGet = get;

/*
  const obj = {a: {aa: {aaa: 2}}, b: 4};

  get(obj, 'a.aa.aaa'); // 2
  get(obj, ['a', 'aa', 'aaa']); // 2

  get(obj, 'b.bb.bbb'); // undefined
  get(obj, ['b', 'bb', 'bbb']); // undefined

  get(obj.a, 'aa.aaa'); // 2
  get(obj.a, ['aa', 'aaa']); // 2

  get(obj.b, 'bb.bbb'); // undefined
  get(obj.b, ['bb', 'bbb']); // undefined

  get(obj.b, 'bb.bbb', 42); // 42
  get(obj.b, ['bb', 'bbb'], 42); // 42

  get(null, 'a'); // undefined
  get(undefined, ['a']); // undefined

  get(null, 'a', 42); // 42
  get(undefined, ['a'], 42); // 42

  const obj = {a: {}};
  const sym = Symbol();
  obj.a[sym] = 4;
  get(obj.a, sym); // 4
*/

function get(obj, propsArg, defaultValue) {
  if (!obj) {
    return defaultValue;
  }
  var props, prop;
  if (Array.isArray(propsArg)) {
    props = propsArg.slice(0);
  }
  if (typeof propsArg == 'string') {
    props = propsArg.split('.');
  }
  if (typeof propsArg == 'symbol') {
    props = [propsArg];
  }
  if (!Array.isArray(props)) {
    throw new Error('props arg must be an array, a string or a symbol');
  }
  while (props.length) {
    prop = props.shift();
    if (!obj) {
      return defaultValue;
    }
    obj = obj[prop];
    if (obj === undefined) {
      return defaultValue;
    }
  }
  return obj;
}

// Inspiration: https://github.com/facebook/react/issues/3386

function replace (string, regexpOrSubstr, newValueOrFn, globalOffset) {
	if (typeof string !== 'string') throw new Error('First param must be a string')
	if (typeof regexpOrSubstr !== 'string' && !(regexpOrSubstr instanceof RegExp)) throw new Error('Second param must be a string pattern or a regular expression')

	var fn = (typeof regexpOrSubstr === 'string') ? replaceUsingString : replaceUsingRegexp;

	return fn(string, regexpOrSubstr, newValueOrFn, globalOffset)
}

function replaceUsingString (string, patternString, newValueOrFn, globalOffset) {
	var index = string.indexOf(patternString);

	if (index >= 0) {
		var arr = [];
		var endIndex = index + patternString.length;

		if (index > 0) {
			arr.push(string.substring(0, index));
		}

		arr.push(
			(typeof newValueOrFn === 'function') ?
				newValueOrFn(
					string.substring(index, endIndex),
					index + globalOffset,
					string
				) :
				newValueOrFn
		);

		if (endIndex < string.length) {
			arr.push(string.substring(endIndex));
		}

		return arr
	} else {
		return [string]
	}
}

function replaceUsingRegexp (string, regexp, newValueOrFn, globalOffset) {
	var output = [];

	var replacerIsFn = (typeof newValueOrFn === 'function');

	var storedLastIndex = regexp.lastIndex;
	regexp.lastIndex = 0;

	var result;
	var lastIndex = 0;
	while (result = regexp.exec(string)) {
		var index = result.index;

		if (result[0] === '') {
			// When the regexp is an empty string
			// we still want to advance our cursor to the next item.
			// This is the behavior of String.replace.
			regexp.lastIndex++;
		}

		if (index !== lastIndex) {
			output.push(string.substring(lastIndex, index));
		}

		var match = result[0];
		lastIndex = index + match.length;
		
		var out = replacerIsFn ?
			newValueOrFn.apply(this, result.concat(index + globalOffset, result.input)) :
			newValueOrFn;
		output.push(out);

		if (!regexp.global) {
			break
		}
	}

	if (lastIndex < string.length) {
		output.push(string.substring(lastIndex));
	}

	regexp.lastIndex = storedLastIndex;
	return output
}

var stringReplaceToArray = function stringReplaceToArray (stringOrArray, regexpOrSubstr, newSubStrOrFn) {
	if (typeof stringOrArray === 'string') {
		return replace(stringOrArray, regexpOrSubstr, newSubStrOrFn, 0)
	} else if (!Array.isArray(stringOrArray) || !stringOrArray[0]) {
		throw new TypeError('First argument must be an array or non-empty string')
	} else {
		var len = stringOrArray.length;
		var output = [];
		var globalOffset = 0;
		for (var i = 0; i < len; ++i) {
			var arrayItem = stringOrArray[i];
			if (typeof arrayItem === 'string') {
				output.push.apply(output, replace(arrayItem, regexpOrSubstr, newSubStrOrFn, globalOffset));
				globalOffset += arrayItem.length;
			} else {
				output.push(arrayItem);
			}
		}
		return output
	}
};

// This is based off of https://github.com/twitter/twemoji/blob/gh-pages/2/twemoji.js
//
// Ideally we'd use twemoji instead of replicating its logic.
// The reason we can't is that we need to run our own replace.
//
// We could use it for most things (by essentially running twemoji.parse for each
// regex match, and reading the code from the callback), but the one thing we'd always need
// to copy and paste into this file is the regex since we need it to run the replace.
//
// Another option is to fork twemoji and expose a method in it that could help us, then
// ask them to pull it in.
//

// RegExp based on emoji's official Unicode standards
// http://www.unicode.org/Public/UNIDATA/EmojiSources.txt
var re = /(?:\ud83d\udc68\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffc-\udfff]|\ud83e\uddd1\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffb\udffd-\udfff]|\ud83e\uddd1\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffb\udffc\udffe\udfff]|\ud83e\uddd1\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffb-\udffd\udfff]|\ud83e\uddd1\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83e\uddd1\ud83c[\udffb-\udffe]|\ud83d\udc68\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffc-\udfff]|\ud83d\udc68\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb\udffd-\udfff]|\ud83d\udc68\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb\udffc\udffe\udfff]|\ud83d\udc68\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb-\udffd\udfff]|\ud83d\udc68\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc68\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb-\udffe]|\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffc-\udfff]|\ud83d\udc69\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffc-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb\udffd-\udfff]|\ud83d\udc69\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffb\udffd-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb\udffc\udffe\udfff]|\ud83d\udc69\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffb\udffc\udffe\udfff]|\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb-\udffd\udfff]|\ud83d\udc69\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffb-\udffd\udfff]|\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc68\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83d\udc69\ud83c[\udffb-\udfff]|\ud83d\udc69\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc68\ud83c[\udffb-\udffe]|\ud83d\udc69\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83d\udc69\ud83c[\udffb-\udffe]|\ud83e\uddd1\ud83c\udffb\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffc-\udfff]|\ud83e\uddd1\ud83c\udffb\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udffc\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffb\udffd-\udfff]|\ud83e\uddd1\ud83c\udffc\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udffd\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffb\udffc\udffe\udfff]|\ud83e\uddd1\ud83c\udffd\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udffe\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffb-\udffd\udfff]|\ud83e\uddd1\ud83c\udffe\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83e\uddd1\ud83c\udfff\u200d\u2764\ufe0f\u200d\ud83e\uddd1\ud83c[\udffb-\udffe]|\ud83e\uddd1\ud83c\udfff\u200d\ud83e\udd1d\u200d\ud83e\uddd1\ud83c[\udffb-\udfff]|\ud83d\udc68\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d\udc68|\ud83d\udc69\u200d\u2764\ufe0f\u200d\ud83d\udc8b\u200d\ud83d[\udc68\udc69]|\ud83d\udc68\u200d\u2764\ufe0f\u200d\ud83d\udc68|\ud83d\udc69\u200d\u2764\ufe0f\u200d\ud83d[\udc68\udc69]|\ud83e\uddd1\u200d\ud83e\udd1d\u200d\ud83e\uddd1|\ud83d\udc6b\ud83c[\udffb-\udfff]|\ud83d\udc6c\ud83c[\udffb-\udfff]|\ud83d\udc6d\ud83c[\udffb-\udfff]|\ud83d\udc8f\ud83c[\udffb-\udfff]|\ud83d\udc91\ud83c[\udffb-\udfff]|\ud83d[\udc6b-\udc6d\udc8f\udc91])|(?:\ud83d[\udc68\udc69]|\ud83e\uddd1)(?:\ud83c[\udffb-\udfff])?\u200d(?:\u2695\ufe0f|\u2696\ufe0f|\u2708\ufe0f|\ud83c[\udf3e\udf73\udf7c\udf84\udf93\udfa4\udfa8\udfeb\udfed]|\ud83d[\udcbb\udcbc\udd27\udd2c\ude80\ude92]|\ud83e[\uddaf-\uddb3\uddbc\uddbd])|(?:\ud83c[\udfcb\udfcc]|\ud83d[\udd74\udd75]|\u26f9)((?:\ud83c[\udffb-\udfff]|\ufe0f)\u200d[\u2640\u2642]\ufe0f)|(?:\ud83c[\udfc3\udfc4\udfca]|\ud83d[\udc6e\udc70\udc71\udc73\udc77\udc81\udc82\udc86\udc87\ude45-\ude47\ude4b\ude4d\ude4e\udea3\udeb4-\udeb6]|\ud83e[\udd26\udd35\udd37-\udd39\udd3d\udd3e\uddb8\uddb9\uddcd-\uddcf\uddd4\uddd6-\udddd])(?:\ud83c[\udffb-\udfff])?\u200d[\u2640\u2642]\ufe0f|(?:\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc68\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc68\u200d\ud83d[\udc66\udc67]|\ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66|\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d[\udc66\udc67]|\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f|\ud83c\udff3\ufe0f\u200d\ud83c\udf08|\ud83d\ude36\u200d\ud83c\udf2b\ufe0f|\u2764\ufe0f\u200d\ud83d\udd25|\u2764\ufe0f\u200d\ud83e\ude79|\ud83c\udff4\u200d\u2620\ufe0f|\ud83d\udc15\u200d\ud83e\uddba|\ud83d\udc3b\u200d\u2744\ufe0f|\ud83d\udc41\u200d\ud83d\udde8|\ud83d\udc68\u200d\ud83d[\udc66\udc67]|\ud83d\udc69\u200d\ud83d[\udc66\udc67]|\ud83d\udc6f\u200d\u2640\ufe0f|\ud83d\udc6f\u200d\u2642\ufe0f|\ud83d\ude2e\u200d\ud83d\udca8|\ud83d\ude35\u200d\ud83d\udcab|\ud83e\udd3c\u200d\u2640\ufe0f|\ud83e\udd3c\u200d\u2642\ufe0f|\ud83e\uddde\u200d\u2640\ufe0f|\ud83e\uddde\u200d\u2642\ufe0f|\ud83e\udddf\u200d\u2640\ufe0f|\ud83e\udddf\u200d\u2642\ufe0f|\ud83d\udc08\u200d\u2b1b)|[#*0-9]\ufe0f?\u20e3|(?:[©®\u2122\u265f]\ufe0f)|(?:\ud83c[\udc04\udd70\udd71\udd7e\udd7f\ude02\ude1a\ude2f\ude37\udf21\udf24-\udf2c\udf36\udf7d\udf96\udf97\udf99-\udf9b\udf9e\udf9f\udfcd\udfce\udfd4-\udfdf\udff3\udff5\udff7]|\ud83d[\udc3f\udc41\udcfd\udd49\udd4a\udd6f\udd70\udd73\udd76-\udd79\udd87\udd8a-\udd8d\udda5\udda8\uddb1\uddb2\uddbc\uddc2-\uddc4\uddd1-\uddd3\udddc-\uddde\udde1\udde3\udde8\uddef\uddf3\uddfa\udecb\udecd-\udecf\udee0-\udee5\udee9\udef0\udef3]|[\u203c\u2049\u2139\u2194-\u2199\u21a9\u21aa\u231a\u231b\u2328\u23cf\u23ed-\u23ef\u23f1\u23f2\u23f8-\u23fa\u24c2\u25aa\u25ab\u25b6\u25c0\u25fb-\u25fe\u2600-\u2604\u260e\u2611\u2614\u2615\u2618\u2620\u2622\u2623\u2626\u262a\u262e\u262f\u2638-\u263a\u2640\u2642\u2648-\u2653\u2660\u2663\u2665\u2666\u2668\u267b\u267f\u2692-\u2697\u2699\u269b\u269c\u26a0\u26a1\u26a7\u26aa\u26ab\u26b0\u26b1\u26bd\u26be\u26c4\u26c5\u26c8\u26cf\u26d1\u26d3\u26d4\u26e9\u26ea\u26f0-\u26f5\u26f8\u26fa\u26fd\u2702\u2708\u2709\u270f\u2712\u2714\u2716\u271d\u2721\u2733\u2734\u2744\u2747\u2757\u2763\u2764\u27a1\u2934\u2935\u2b05-\u2b07\u2b1b\u2b1c\u2b50\u2b55\u3030\u303d\u3297\u3299])(?:\ufe0f|(?!\ufe0e))|(?:(?:\ud83c[\udfcb\udfcc]|\ud83d[\udd74\udd75\udd90]|[\u261d\u26f7\u26f9\u270c\u270d])(?:\ufe0f|(?!\ufe0e))|(?:\ud83c[\udf85\udfc2-\udfc4\udfc7\udfca]|\ud83d[\udc42\udc43\udc46-\udc50\udc66-\udc69\udc6e\udc70-\udc78\udc7c\udc81-\udc83\udc85-\udc87\udcaa\udd7a\udd95\udd96\ude45-\ude47\ude4b-\ude4f\udea3\udeb4-\udeb6\udec0\udecc]|\ud83e[\udd0c\udd0f\udd18-\udd1c\udd1e\udd1f\udd26\udd30-\udd39\udd3d\udd3e\udd77\uddb5\uddb6\uddb8\uddb9\uddbb\uddcd-\uddcf\uddd1-\udddd]|[\u270a\u270b]))(?:\ud83c[\udffb-\udfff])?|(?:\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f|\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc73\udb40\udc63\udb40\udc74\udb40\udc7f|\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc77\udb40\udc6c\udb40\udc73\udb40\udc7f|\ud83c\udde6\ud83c[\udde8-\uddec\uddee\uddf1\uddf2\uddf4\uddf6-\uddfa\uddfc\uddfd\uddff]|\ud83c\udde7\ud83c[\udde6\udde7\udde9-\uddef\uddf1-\uddf4\uddf6-\uddf9\uddfb\uddfc\uddfe\uddff]|\ud83c\udde8\ud83c[\udde6\udde8\udde9\uddeb-\uddee\uddf0-\uddf5\uddf7\uddfa-\uddff]|\ud83c\udde9\ud83c[\uddea\uddec\uddef\uddf0\uddf2\uddf4\uddff]|\ud83c\uddea\ud83c[\udde6\udde8\uddea\uddec\udded\uddf7-\uddfa]|\ud83c\uddeb\ud83c[\uddee-\uddf0\uddf2\uddf4\uddf7]|\ud83c\uddec\ud83c[\udde6\udde7\udde9-\uddee\uddf1-\uddf3\uddf5-\uddfa\uddfc\uddfe]|\ud83c\udded\ud83c[\uddf0\uddf2\uddf3\uddf7\uddf9\uddfa]|\ud83c\uddee\ud83c[\udde8-\uddea\uddf1-\uddf4\uddf6-\uddf9]|\ud83c\uddef\ud83c[\uddea\uddf2\uddf4\uddf5]|\ud83c\uddf0\ud83c[\uddea\uddec-\uddee\uddf2\uddf3\uddf5\uddf7\uddfc\uddfe\uddff]|\ud83c\uddf1\ud83c[\udde6-\udde8\uddee\uddf0\uddf7-\uddfb\uddfe]|\ud83c\uddf2\ud83c[\udde6\udde8-\udded\uddf0-\uddff]|\ud83c\uddf3\ud83c[\udde6\udde8\uddea-\uddec\uddee\uddf1\uddf4\uddf5\uddf7\uddfa\uddff]|\ud83c\uddf4\ud83c\uddf2|\ud83c\uddf5\ud83c[\udde6\uddea-\udded\uddf0-\uddf3\uddf7-\uddf9\uddfc\uddfe]|\ud83c\uddf6\ud83c\udde6|\ud83c\uddf7\ud83c[\uddea\uddf4\uddf8\uddfa\uddfc]|\ud83c\uddf8\ud83c[\udde6-\uddea\uddec-\uddf4\uddf7-\uddf9\uddfb\uddfd-\uddff]|\ud83c\uddf9\ud83c[\udde6\udde8\udde9\uddeb-\udded\uddef-\uddf4\uddf7\uddf9\uddfb\uddfc\uddff]|\ud83c\uddfa\ud83c[\udde6\uddec\uddf2\uddf3\uddf8\uddfe\uddff]|\ud83c\uddfb\ud83c[\udde6\udde8\uddea\uddec\uddee\uddf3\uddfa]|\ud83c\uddfc\ud83c[\uddeb\uddf8]|\ud83c\uddfd\ud83c\uddf0|\ud83c\uddfe\ud83c[\uddea\uddf9]|\ud83c\uddff\ud83c[\udde6\uddf2\uddfc]|\ud83c[\udccf\udd8e\udd91-\udd9a\udde6-\uddff\ude01\ude32-\ude36\ude38-\ude3a\ude50\ude51\udf00-\udf20\udf2d-\udf35\udf37-\udf7c\udf7e-\udf84\udf86-\udf93\udfa0-\udfc1\udfc5\udfc6\udfc8\udfc9\udfcf-\udfd3\udfe0-\udff0\udff4\udff8-\udfff]|\ud83d[\udc00-\udc3e\udc40\udc44\udc45\udc51-\udc65\udc6a\udc6f\udc79-\udc7b\udc7d-\udc80\udc84\udc88-\udc8e\udc90\udc92-\udca9\udcab-\udcfc\udcff-\udd3d\udd4b-\udd4e\udd50-\udd67\udda4\uddfb-\ude44\ude48-\ude4a\ude80-\udea2\udea4-\udeb3\udeb7-\udebf\udec1-\udec5\uded0-\uded2\uded5-\uded7\udeeb\udeec\udef4-\udefc\udfe0-\udfeb]|\ud83e[\udd0d\udd0e\udd10-\udd17\udd1d\udd20-\udd25\udd27-\udd2f\udd3a\udd3c\udd3f-\udd45\udd47-\udd76\udd78\udd7a-\uddb4\uddb7\uddba\uddbc-\uddcb\uddd0\uddde-\uddff\ude70-\ude74\ude78-\ude7a\ude80-\ude86\ude90-\udea8\udeb0-\udeb6\udec0-\udec2\uded0-\uded6]|[\u23e9-\u23ec\u23f0\u23f3\u267e\u26ce\u2705\u2728\u274c\u274e\u2753-\u2755\u2795-\u2797\u27b0\u27bf\ue50a])|\ufe0f/g;

function toCodePoint(unicodeSurrogates, sep) {
    var
		r = [],
		c = 0,
		p = 0,
		i = 0;
		
	while (i < unicodeSurrogates.length) {
		c = unicodeSurrogates.charCodeAt(i++);
		if (p) {
			r.push((0x10000 + ((p - 0xD800) << 10) + (c - 0xDC00)).toString(16));
			p = 0;
		} else if (0xD800 <= c && c <= 0xDBFF) {
			p = c;
		} else {
			r.push(c.toString(16));
		}
	}
	return r.join(sep || '-')
}

// avoid runtime RegExp creation for not so smart,
// not JIT based, and old browsers / engines
var UFE0Fg = /\uFE0F/g;

// avoid using a string literal like '\u200D' here because minifiers expand it inline
var U200D = String.fromCharCode(0x200D);

/**
* Used to both remove the possible variant
*  and to convert utf16 into code points.
*  If there is a zero-width-joiner (U+200D), leave the variants in.
* @param   string    the raw text of the emoji match
*/
function grabTheRightIcon(rawText) {
	// if variant is present as \uFE0F
	return toCodePoint(rawText.indexOf(U200D) < 0 ?
		rawText.replace(UFE0Fg, '') :
		rawText
	);
}

var replaceEmoji$1 = function replaceEmoji (string, render) {
	// Note: the latest regex added an empty matching group, so we ignore it.
	return stringReplaceToArray(string, re, function emojiReplacer (match, _, offset) {
		var icon = grabTheRightIcon(match);
		return render(icon, match, offset)
	})
};

var createElement = React__default["default"].createElement;

var pageProtocol = (typeof location === 'undefined') ? '' : ((location.protocol === 'https:') ? 'https:' : 'http:');

var emojiStyle = {
	height: '1em',
	width: '1em',
	margin: '0 .05em 0 .1em',
	verticalAlign: '-0.1em'
};

// Accept protocol with or without a colon
function normalizeProtocol(protocol) {
	if (protocol && protocol.length > 0 && protocol.charAt(protocol.length - 1) !== ':') {
		return protocol + ':'
	}
	return protocol
}

var makeTwemojiRenderer$1 = function makeTwemojiRenderer(options) {
	options = merge({
		protocol: pageProtocol,
		baseUrl: '//twemoji.maxcdn.com/2/',
		size: '72x72',
		ext: '.png',
		props: null
	}, options);

	return function renderTwemoji (icon, match, offset) {
		var src = '';
		if (options.baseUrl.indexOf('http') !== 0) {
			src += normalizeProtocol(options.protocol);
		}

		src += options.baseUrl + options.size + '/' + icon + options.ext;

		return createElement(
			'img',
			merge({
				key: offset,
				alt: match,
				draggable: false,
				src: src,
				style: emojiStyle
			}, options.props)
		)
	}
};

function merge() {
	var out = {}, len = arguments.length;
	for(var i = 0; i < len; ++i) {
		var source = arguments[i];
		if (source) {
			for (var key in source) {
				if (Object.prototype.hasOwnProperty.call(source, key)) {
					out[key] = source[key];
				}
			}
		}
   }
   return out
}

var replaceEmoji = replaceEmoji$1;

var makeTwemojiRenderer = makeTwemojiRenderer$1;

var reactEasyEmoji = function reactEasyEmoji (element, optionsOrFn) {
	var render = (typeof optionsOrFn === 'function') ? optionsOrFn : makeTwemojiRenderer(optionsOrFn);
	return replaceEmoji(element, render)
};

var emoji = reactEasyEmoji;

/*
  These magic numbers are charCode math, where we take advantage of the offset
  between any two uppercase leters (e.g. A - C = 2) being the same as the one
  between the emoji flag variant of those letters (e.g. (emoji A) - (emoji C) = 2).
*/
const FLAG_LETTER_EMOJI_FIRST_CODEPOINT = 55356; // "🇦".charCodeAt(0)
const UPPERCASE_AND_FLAG_LETTER_EMOJI_SECOND_CODEPOINT_OFFSET = 56741; // "🇦".charCodeAt(1) - "A".charCodeAt(0)
const getEmojiFlag = (countryCode) => {
    countryCode = countryCode.toUpperCase();
    /* Emoji flags are made from combination of two emoji sequences of two codepoints each. */
    return String.fromCharCode(FLAG_LETTER_EMOJI_FIRST_CODEPOINT, UPPERCASE_AND_FLAG_LETTER_EMOJI_SECOND_CODEPOINT_OFFSET +
        countryCode.charCodeAt(0), FLAG_LETTER_EMOJI_FIRST_CODEPOINT, UPPERCASE_AND_FLAG_LETTER_EMOJI_SECOND_CODEPOINT_OFFSET +
        countryCode.charCodeAt(1));
};

var SupportedEmojiFlagCodes = ['AD', 'AE', 'AF', 'AG', 'AI', 'AL', 'AM', 'AO', 'AQ', 'AR', 'AS', 'AT', 'AU', 'AW', 'AX', 'AZ', 'BA', 'BB', 'BD', 'BE', 'BF', 'BG', 'BH', 'BI', 'BJ', 'BL', 'BM', 'BN', 'BO', 'BQ', 'BR', 'BS', 'BT', 'BV', 'BW', 'BY', 'BZ', 'CA', 'CC', 'CD', 'CF', 'CG', 'CH', 'CI', 'CK', 'CL', 'CM', 'CN', 'CO', 'CR', 'CU', 'CV', 'CW', 'CX', 'CY', 'CZ', 'DE', 'DJ', 'DK', 'DM', 'DO', 'DZ', 'EC', 'EE', 'EG', 'EH', 'ER', 'ES', 'ET', 'FI', 'FJ', 'FK', 'FM', 'FO', 'FR', 'GA', 'GB', 'GD', 'GE', 'GF', 'GG', 'GH', 'GI', 'GL', 'GM', 'GN', 'GP', 'GQ', 'GR', 'GS', 'GT', 'GU', 'GW', 'GY', 'HK', 'HM', 'HN', 'HR', 'HT', 'HU', 'ID', 'IE', 'IL', 'IM', 'IN', 'IO', 'IQ', 'IR', 'IS', 'IT', 'JE', 'JM', 'JO', 'JP', 'KE', 'KG', 'KH', 'KI', 'KM', 'KN', 'KP', 'KR', 'KW', 'KY', 'KZ', 'LA', 'LB', 'LC', 'LI', 'LK', 'LR', 'LS', 'LT', 'LU', 'LV', 'LY', 'MA', 'MC', 'MD', 'ME', 'MF', 'MG', 'MH', 'MK', 'ML', 'MM', 'MN', 'MO', 'MP', 'MQ', 'MR', 'MS', 'MT', 'MU', 'MV', 'MW', 'MX', 'MY', 'MZ', 'NA', 'NC', 'NE', 'NF', 'NG', 'NI', 'NL', 'NO', 'NP', 'NR', 'NU', 'NZ', 'OM', 'PA', 'PE', 'PF', 'PG', 'PH', 'PK', 'PL', 'PM', 'PN', 'PR', 'PS', 'PT', 'PW', 'PY', 'QA', 'RE', 'RO', 'RS', 'RU', 'RW', 'SA', 'SB', 'SC', 'SD', 'SE', 'SG', 'SH', 'SI', 'SJ', 'SK', 'SL', 'SM', 'SN', 'SO', 'SR', 'SS', 'ST', 'SV', 'SX', 'SY', 'SZ', 'TC', 'TD', 'TF', 'TG', 'TH', 'TJ', 'TK', 'TL', 'TM', 'TN', 'TO', 'TR', 'TT', 'TV', 'TW', 'TZ', 'UA', 'UG', 'UM', 'US', 'UY', 'UZ', 'VA', 'VC', 'VE', 'VG', 'VI', 'VN', 'VU', 'WF', 'WS', 'YE', 'YT', 'ZA', 'ZM', 'ZW'];

var LanguageCultures = [{
  value: 'af',
  title: 'Afrikaans'
}, {
  value: 'af-ZA',
  title: 'Afrikaans (South Africa)'
}, {
  value: 'ar',
  title: 'Arabic'
}, {
  value: 'ar-AE',
  title: 'Arabic (U.A.E.)'
}, {
  value: 'ar-BH',
  title: 'Arabic (Bahrain)'
}, {
  value: 'ar-DZ',
  title: 'Arabic (Algeria)'
}, {
  value: 'ar-EG',
  title: 'Arabic (Egypt)'
}, {
  value: 'ar-IQ',
  title: 'Arabic (Iraq)'
}, {
  value: 'ar-JO',
  title: 'Arabic (Jordan)'
}, {
  value: 'ar-KW',
  title: 'Arabic (Kuwait)'
}, {
  value: 'ar-LB',
  title: 'Arabic (Lebanon)'
}, {
  value: 'ar-LY',
  title: 'Arabic (Libya)'
}, {
  value: 'ar-MA',
  title: 'Arabic (Morocco)'
}, {
  value: 'ar-OM',
  title: 'Arabic (Oman)'
}, {
  value: 'ar-QA',
  title: 'Arabic (Qatar)'
}, {
  value: 'ar-SA',
  title: 'Arabic (Saudi Arabia)'
}, {
  value: 'ar-SY',
  title: 'Arabic (Syria)'
}, {
  value: 'ar-TN',
  title: 'Arabic (Tunisia)'
}, {
  value: 'ar-YE',
  title: 'Arabic (Yemen)'
}, {
  value: 'az',
  title: 'Azeri'
}, {
  value: 'az-Cyrl-AZ',
  title: 'Azeri (Cyrillic, Azerbaijan)'
}, {
  value: 'az-Latn-AZ',
  title: 'Azeri (Latin, Azerbaijan)'
}, {
  value: 'be',
  title: 'Belarusian'
}, {
  value: 'be-BY',
  title: 'Belarusian (Belarus)'
}, {
  value: 'bg',
  title: 'Bulgarian'
}, {
  value: 'bg-BG',
  title: 'Bulgarian (Bulgaria)'
}, {
  value: 'bs-Latn-BA',
  title: 'Bosnian (Bosnia and Herzegovina)'
}, {
  value: 'ca',
  title: 'Catalan'
}, {
  value: 'ca-ES',
  title: 'Catalan (Catalan)'
}, {
  value: 'cs',
  title: 'Czech'
}, {
  value: 'cs-CZ',
  title: 'Czech (Czech Republic)'
}, {
  value: 'cy-GB',
  title: 'Welsh (United Kingdom)'
}, {
  value: 'da',
  title: 'Danish'
}, {
  value: 'da-DK',
  title: 'Danish (Denmark)'
}, {
  value: 'de',
  title: 'German'
}, {
  value: 'de-AT',
  title: 'German (Austria)'
}, {
  value: 'de-DE',
  title: 'German (Germany)'
}, {
  value: 'de-CH',
  title: 'German (Switzerland)'
}, {
  value: 'de-LI',
  title: 'German (Liechtenstein)'
}, {
  value: 'de-LU',
  title: 'German (Luxembourg)'
}, {
  value: 'dv',
  title: 'Divehi'
}, {
  value: 'dv-MV',
  title: 'Divehi (Maldives)'
}, {
  value: 'el',
  title: 'Greek'
}, {
  value: 'el-GR',
  title: 'Greek (Greece)'
}, {
  value: 'en',
  title: 'English'
}, {
  value: 'en-029',
  title: 'English (Caribbean)'
}, {
  value: 'en-AU',
  title: 'English (Australia)'
}, {
  value: 'en-BZ',
  title: 'English (Belize)'
}, {
  value: 'en-CA',
  title: 'English (Canada)'
}, {
  value: 'en-GB',
  title: 'English (United Kingdom)'
}, {
  value: 'en-IE',
  title: 'English (Ireland)'
}, {
  value: 'en-JM',
  title: 'English (Jamaica)'
}, {
  value: 'en-NZ',
  title: 'English (New Zealand)'
}, {
  value: 'en-PH',
  title: 'English (Republic of the Philippines)'
}, {
  value: 'en-TT',
  title: 'English (Trinidad and Tobago)'
}, {
  value: 'en-US',
  title: 'English (United States)'
}, {
  value: 'en-ZA',
  title: 'English (South Africa)'
}, {
  value: 'en-ZW',
  title: 'English (Zimbabwe)'
}, {
  value: 'es',
  title: 'Spanish'
}, {
  value: 'es-AR',
  title: 'Spanish (Argentina)'
}, {
  value: 'es-BO',
  title: 'Spanish (Bolivia)'
}, {
  value: 'es-CL',
  title: 'Spanish (Chile)'
}, {
  value: 'es-CO',
  title: 'Spanish (Colombia)'
}, {
  value: 'es-CR',
  title: 'Spanish (Costa Rica)'
}, {
  value: 'es-DO',
  title: 'Spanish (Dominican Republic)'
}, {
  value: 'es-EC',
  title: 'Spanish (Ecuador)'
}, {
  value: 'es-ES',
  title: 'Spanish (Spain)'
}, {
  value: 'es-GT',
  title: 'Spanish (Guatemala)'
}, {
  value: 'es-HN',
  title: 'Spanish (Honduras)'
}, {
  value: 'es-MX',
  title: 'Spanish (Mexico)'
}, {
  value: 'es-NI',
  title: 'Spanish (Nicaragua)'
}, {
  value: 'es-PA',
  title: 'Spanish (Panama)'
}, {
  value: 'es-PE',
  title: 'Spanish (Peru)'
}, {
  value: 'es-PR',
  title: 'Spanish (Puerto Rico)'
}, {
  value: 'es-PY',
  title: 'Spanish (Paraguay)'
}, {
  value: 'es-SV',
  title: 'Spanish (El Salvador)'
}, {
  value: 'es-UY',
  title: 'Spanish (Uruguay)'
}, {
  value: 'es-VE',
  title: 'Spanish (Venezuela)'
}, {
  value: 'et',
  title: 'Estonian'
}, {
  value: 'et-EE',
  title: 'Estonian (Estonia)'
}, {
  value: 'eu',
  title: 'Basque'
}, {
  value: 'eu-ES',
  title: 'Basque (Basque)'
}, {
  value: 'fa',
  title: 'Persian'
}, {
  value: 'fa-IR',
  title: 'Persian (Iran)'
}, {
  value: 'fi',
  title: 'Finnish'
}, {
  value: 'fi-FI',
  title: 'Finnish (Finland)'
}, {
  value: 'fo',
  title: 'Faroese'
}, {
  value: 'fo-FO',
  title: 'Faroese (Faroe Islands)'
}, {
  value: 'fr',
  title: 'French'
}, {
  value: 'fr-BE',
  title: 'French (Belgium)'
}, {
  value: 'fr-CA',
  title: 'French (Canada)'
}, {
  value: 'fr-FR',
  title: 'French (France)'
}, {
  value: 'fr-CH',
  title: 'French (Switzerland)'
}, {
  value: 'fr-LU',
  title: 'French (Luxembourg)'
}, {
  value: 'fr-MC',
  title: 'French (Principality of Monaco)'
}, {
  value: 'gl',
  title: 'Galician'
}, {
  value: 'gl-ES',
  title: 'Galician (Galician)'
}, {
  value: 'gu',
  title: 'Gujarati'
}, {
  value: 'gu-IN',
  title: 'Gujarati (India)'
}, {
  value: 'he',
  title: 'Hebrew'
}, {
  value: 'he-IL',
  title: 'Hebrew (Israel)'
}, {
  value: 'hi',
  title: 'Hindi'
}, {
  value: 'hi-IN',
  title: 'Hindi (India)'
}, {
  value: 'hr',
  title: 'Croatian'
}, {
  value: 'hr-BA',
  title: 'Croatian (Bosnia and Herzegovina)'
}, {
  value: 'hr-HR',
  title: 'Croatian (Croatia)'
}, {
  value: 'hu',
  title: 'Hungarian'
}, {
  value: 'hu-HU',
  title: 'Hungarian (Hungary)'
}, {
  value: 'hy',
  title: 'Armenian'
}, {
  value: 'hy-AM',
  title: 'Armenian (Armenia)'
}, {
  value: 'id',
  title: 'Indonesian'
}, {
  value: 'id-ID',
  title: 'Indonesian (Indonesia)'
}, {
  value: 'is',
  title: 'Icelandic'
}, {
  value: 'is-IS',
  title: 'Icelandic (Iceland)'
}, {
  value: 'it',
  title: 'Italian'
}, {
  value: 'it-CH',
  title: 'Italian (Switzerland)'
}, {
  value: 'it-IT',
  title: 'Italian (Italy)'
}, {
  value: 'ja',
  title: 'Japanese'
}, {
  value: 'ja-JP',
  title: 'Japanese (Japan)'
}, {
  value: 'ka',
  title: 'Georgian'
}, {
  value: 'ka-GE',
  title: 'Georgian (Georgia)'
}, {
  value: 'kk',
  title: 'Kazakh'
}, {
  value: 'kk-KZ',
  title: 'Kazakh (Kazakhstan)'
}, {
  value: 'kn',
  title: 'Kannada'
}, {
  value: 'kn-IN',
  title: 'Kannada (India)'
}, {
  value: 'ko',
  title: 'Korean'
}, {
  value: 'kok',
  title: 'Konkani'
}, {
  value: 'kok-IN',
  title: 'Konkani (India)'
}, {
  value: 'ko-KR',
  title: 'Korean (Korea)'
}, {
  value: 'ky',
  title: 'Kyrgyz'
}, {
  value: 'ky-KG',
  title: 'Kyrgyz (Kyrgyzstan)'
}, {
  value: 'lt',
  title: 'Lithuanian'
}, {
  value: 'lt-LT',
  title: 'Lithuanian (Lithuania)'
}, {
  value: 'lv',
  title: 'Latvian'
}, {
  value: 'lv-LV',
  title: 'Latvian (Latvia)'
}, {
  value: 'mi-NZ',
  title: 'Maori (New Zealand)'
}, {
  value: 'mk',
  title: 'Macedonian'
}, {
  value: 'mk-MK',
  title: 'Macedonian (Former Yugoslav Republic of Macedonia)'
}, {
  value: 'mn',
  title: 'Mongolian'
}, {
  value: 'mn-MN',
  title: 'Mongolian (Cyrillic, Mongolia)'
}, {
  value: 'mr',
  title: 'Marathi'
}, {
  value: 'mr-IN',
  title: 'Marathi (India)'
}, {
  value: 'ms',
  title: 'Malay'
}, {
  value: 'ms-BN',
  title: 'Malay (Brunei Darussalam)'
}, {
  value: 'ms-MY',
  title: 'Malay (Malaysia)'
}, {
  value: 'mt-MT',
  title: 'Maltese (Malta)'
}, {
  value: 'nb-NO',
  title: 'Norwegian, Bokmal (Norway)'
}, {
  value: 'nl',
  title: 'Dutch'
}, {
  value: 'nl-BE',
  title: 'Dutch (Belgium)'
}, {
  value: 'nl-NL',
  title: 'Dutch (Netherlands)'
}, {
  value: 'nn-NO',
  title: 'Norwegian, Nynorsk (Norway)'
}, {
  value: 'no',
  title: 'Norwegian'
}, {
  value: 'ns-ZA',
  title: 'Northern Sotho (South Africa)'
}, {
  value: 'pa',
  title: 'Punjabi'
}, {
  value: 'pa-IN',
  title: 'Punjabi (India)'
}, {
  value: 'pl',
  title: 'Polish'
}, {
  value: 'pl-PL',
  title: 'Polish (Poland)'
}, {
  value: 'pt',
  title: 'Portuguese'
}, {
  value: 'pt-BR',
  title: 'Portuguese (Brazil)'
}, {
  value: 'pt-PT',
  title: 'Portuguese (Portugal)'
}, {
  value: 'quz-BO',
  title: 'Quechua (Bolivia)'
}, {
  value: 'quz-EC',
  title: 'Quechua (Ecuador)'
}, {
  value: 'quz-PE',
  title: 'Quechua (Peru)'
}, {
  value: 'ro',
  title: 'Romanian'
}, {
  value: 'ro-RO',
  title: 'Romanian (Romania)'
}, {
  value: 'ru',
  title: 'Russian'
}, {
  value: 'ru-RU',
  title: 'Russian (Russia)'
}, {
  value: 'sa',
  title: 'Sanskrit'
}, {
  value: 'sa-IN',
  title: 'Sanskrit (India)'
}, {
  value: 'se-FI',
  title: 'Sami (Northern) (Finland)'
}, {
  value: 'se-NO',
  title: 'Sami (Northern) (Norway)'
}, {
  value: 'se-SE',
  title: 'Sami (Northern) (Sweden)'
}, {
  value: 'sk',
  title: 'Slovak'
}, {
  value: 'sk-SK',
  title: 'Slovak (Slovakia)'
}, {
  value: 'sl',
  title: 'Slovenian'
}, {
  value: 'sl-SI',
  title: 'Slovenian (Slovenia)'
}, {
  value: 'sma-NO',
  title: 'Sami (Southern) (Norway)'
}, {
  value: 'sma-SE',
  title: 'Sami (Southern) (Sweden)'
}, {
  value: 'smj-NO',
  title: 'Sami (Lule) (Norway)'
}, {
  value: 'smj-SE',
  title: 'Sami (Lule) (Sweden)'
}, {
  value: 'smn-FI',
  title: 'Sami (Inari) (Finland)'
}, {
  value: 'sms-FI',
  title: 'Sami (Skolt) (Finland)'
}, {
  value: 'sq',
  title: 'Albanian'
}, {
  value: 'sq-AL',
  title: 'Albanian (Albania)'
}, {
  value: 'sr',
  title: 'Serbian'
}, {
  value: 'sr-Cyrl-BA',
  title: 'Serbian (Cyrillic) (Bosnia and Herzegovina)'
}, {
  value: 'sr-Cyrl-CS',
  title: 'Serbian (Cyrillic, Serbia)'
}, {
  value: 'sr-Latn-BA',
  title: 'Serbian (Latin) (Bosnia and Herzegovina)'
}, {
  value: 'sr-Latn-CS',
  title: 'Serbian (Latin, Serbia)'
}, {
  value: 'sv',
  title: 'Swedish'
}, {
  value: 'sv-FI',
  title: 'Swedish (Finland)'
}, {
  value: 'sv-SE',
  title: 'Swedish (Sweden)'
}, {
  value: 'sw',
  title: 'Kiswahili'
}, {
  value: 'sw-KE',
  title: 'Kiswahili (Kenya)'
}, {
  value: 'syr',
  title: 'Syriac'
}, {
  value: 'syr-SY',
  title: 'Syriac (Syria)'
}, {
  value: 'ta',
  title: 'Tamil'
}, {
  value: 'ta-IN',
  title: 'Tamil (India)'
}, {
  value: 'te',
  title: 'Telugu'
}, {
  value: 'te-IN',
  title: 'Telugu (India)'
}, {
  value: 'th',
  title: 'Thai'
}, {
  value: 'th-TH',
  title: 'Thai (Thailand)'
}, {
  value: 'tn-ZA',
  title: 'Tswana (South Africa)'
}, {
  value: 'tr',
  title: 'Turkish'
}, {
  value: 'tr-TR',
  title: 'Turkish (Turkey)'
}, {
  value: 'tt',
  title: 'Tatar'
}, {
  value: 'tt-RU',
  title: 'Tatar (Russia)'
}, {
  value: 'uk',
  title: 'Ukrainian'
}, {
  value: 'uk-UA',
  title: 'Ukrainian (Ukraine)'
}, {
  value: 'ur',
  title: 'Urdu'
}, {
  value: 'ur-PK',
  title: 'Urdu (Islamic Republic of Pakistan)'
}, {
  value: 'uz',
  title: 'Uzbek'
}, {
  value: 'uz-Cyrl-UZ',
  title: 'Uzbek (Cyrillic, Uzbekistan)'
}, {
  value: 'uz-Latn-UZ',
  title: 'Uzbek (Latin, Uzbekistan)'
}, {
  value: 'vi',
  title: 'Vietnamese'
}, {
  value: 'vi-VN',
  title: 'Vietnamese (Vietnam)'
}, {
  value: 'xh-ZA',
  title: 'Xhosa (South Africa)'
}, {
  value: 'zh-CN',
  title: "Chinese (People's Republic of China)"
}, {
  value: 'zh-HK',
  title: 'Chinese (Hong Kong S.A.R.)'
}, {
  value: 'zh-CHS',
  title: 'Chinese (Simplified)'
}, {
  value: 'zh-CHT',
  title: 'Chinese (Traditional)'
}, {
  value: 'zh-MO',
  title: 'Chinese (Macao S.A.R.)'
}, {
  value: 'zh-SG',
  title: 'Chinese (Singapore)'
}, {
  value: 'zh-TW',
  title: 'Chinese (Taiwan)'
}, {
  value: 'zu-ZA',
  title: 'Zulu (South Africa)'
}];

var I18nPrefix = 'i18n';

var I18nDelimiter = '__i18n_';

var ReferenceBehavior;

(function (ReferenceBehavior) {
  ReferenceBehavior["STRONG"] = "strong";
  ReferenceBehavior["WEAK"] = "weak";
  ReferenceBehavior["DISABLED"] = "disabled";
})(ReferenceBehavior || (ReferenceBehavior = {}));

var IdStructure;

(function (IdStructure) {
  IdStructure["SUBPATH"] = "subpath";
  IdStructure["DELIMITER"] = "delimiter";
})(IdStructure || (IdStructure = {}));

var UiMessages = {
  publishing: 'Publishing...',
  publish: 'Publish',
  updatingIntlFields: 'Updating i18n fields',
  intlFieldsUpdated: 'I18n fields updated',
  baseDocumentCopied: 'Base document copied',
  translationCreatedToast: {
    title: function title(name) {
      return "Translation created: ".concat(name);
    },
    description: function description(name) {
      return "The content from \u2018".concat(name, "\u2019 is copied into the new document translation.");
    }
  },
  loading: 'Loading languages...',
  draft: 'Draft',
  missingTranslations: 'Following languages are missing some translations compared to the base language',
  base: 'Base Translation',
  missing: 'Missing',
  deleteAll: {
    buttonTitle: 'Delete (incl. translations)',
    deleting: 'Deleting...'
  },
  duplicateAll: {
    buttonTitle: 'Duplicate (incl. translations)',
    duplicating: 'Duplicating...'
  },
  translationsMaintenance: {
    title: 'Translation Maintenance',
    selectSchemaPlaceholder: 'Select schema type',
    idStructureMismatch: 'document(s) with mismatched ID structures',
    missingLanguageField: 'document(s) are missing the language field',
    missingDocumentRefs: 'document(s) have missing translation references',
    missingBaseDocumentRefs: 'document(s) have missing base document references',
    orphanDocuments: 'orphaned translation document(s)',
    referenceBehaviorMismatch: 'document(s) with mismatched reference behaviors',
    baseLanguageMismatch: 'base document(s) with mismatched language field',
    fix: 'Fix'
  },
  errors: {
    baseDocumentNotPublished: 'It looks like you have not published your base translation yet. When using strong references it is required to publish the base document before publishing any translated entries'
  },
  languageSelect: {
    placeholder: 'Switch language',
    listLabels: {
      existing: 'Select document translations',
      missing: 'Create new document translations'
    }
  }
};

var getFlag = function getFlag() {
  var code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

  if (!code) {
    return "";
  }

  var flagCode = getFlagCode(code);

  if (!SupportedEmojiFlagCodes.includes(flagCode.toUpperCase())) {
    return "";
  }

  var emoji = getEmojiFlag(flagCode);
  return emoji;
}; // Convert some language codes to country codes

var getFlagCode = function getFlagCode() {
  var code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";

  if (!code) {
    return "";
  }

  switch (code.toLocaleLowerCase()) {
    case "en":
      return "gb";

    default:
      return code;
  }
};

var _templateObject$2;
var FlagImageContainer = styled__default["default"].span(_templateObject$2 || (_templateObject$2 = _taggedTemplateLiteral__default["default"](["\n  display: block;\n  padding: 1px;\n  font-size: 19px;\n  margin: 0px -0.05em 0px -0.1em;\n\n  & img {\n    display: block;\n  }\n"])));
var SingleFlag = function SingleFlag(_ref) {
  var code = _ref.code,
      langCulture = _ref.langCulture,
      className = _ref.className;
  var flagEmoji = React.useMemo(function () {
    return code && getFlag(code);
  }, [code]);
  var CustomFlagComponent = React.useMemo(function () {
    if (langCulture && customFlagComponents__namespace) {
      var exportedName = langCulture.replace(/[^a-zA-Z0-9_]/g, '_');

      if (exportedName in customFlagComponents__namespace) {
        return customFlagComponents__namespace[exportedName];
      }
    }

    return null;
  }, [langCulture]);
  return /*#__PURE__*/React__default["default"].createElement(FlagImageContainer, {
    "aria-label": code,
    className: className
  }, CustomFlagComponent && code ? /*#__PURE__*/React__default["default"].createElement(CustomFlagComponent, {
    code: code
  }) : emoji(flagEmoji) || '🏳️‍🌈');
};

var getSchema = function getSchema(name) {
  return schemas__default["default"]._original.types.find(function (s) {
    return s.name === name;
  });
};

var getI18nConfigFromType = function getI18nConfigFromType(type) {
  var i18nconfig = {};

  if (type) {
    if (typeof type === 'string') {
      var schema = getSchema(type);

      if (schema && typeof schema.i18n !== 'boolean') {
        i18nconfig = schema.i18n;
      }
    } else if (typeof type.i18n !== 'boolean') {
      i18nconfig = type.i18n;
    }
  }

  return i18nconfig;
};

function getConfig(type) {
  var _schemaConfig$fieldNa, _cfg$fieldNames, _schemaConfig$fieldNa2, _cfg$fieldNames2, _schemaConfig$fieldNa3, _cfg$fieldNames3;

  var schemaConfig = getI18nConfigFromType(type);
  var cfg = config__default["default"];
  return {
    base: (schemaConfig === null || schemaConfig === void 0 ? void 0 : schemaConfig.base) || (cfg === null || cfg === void 0 ? void 0 : cfg.base) || '',
    idStructure: cfg.idStructure || IdStructure.DELIMITER,
    referenceBehavior: cfg.referenceBehavior || ReferenceBehavior.STRONG,
    withTranslationsMaintenance: (cfg === null || cfg === void 0 ? void 0 : cfg.withTranslationsMaintenance) === true,
    fieldNames: {
      lang: (schemaConfig === null || schemaConfig === void 0 ? void 0 : (_schemaConfig$fieldNa = schemaConfig.fieldNames) === null || _schemaConfig$fieldNa === void 0 ? void 0 : _schemaConfig$fieldNa.lang) || (cfg === null || cfg === void 0 ? void 0 : (_cfg$fieldNames = cfg.fieldNames) === null || _cfg$fieldNames === void 0 ? void 0 : _cfg$fieldNames.lang) || '__i18n_lang',
      references: (schemaConfig === null || schemaConfig === void 0 ? void 0 : (_schemaConfig$fieldNa2 = schemaConfig.fieldNames) === null || _schemaConfig$fieldNa2 === void 0 ? void 0 : _schemaConfig$fieldNa2.references) || (cfg === null || cfg === void 0 ? void 0 : (_cfg$fieldNames2 = cfg.fieldNames) === null || _cfg$fieldNames2 === void 0 ? void 0 : _cfg$fieldNames2.references) || '__i18n_refs',
      baseReference: (schemaConfig === null || schemaConfig === void 0 ? void 0 : (_schemaConfig$fieldNa3 = schemaConfig.fieldNames) === null || _schemaConfig$fieldNa3 === void 0 ? void 0 : _schemaConfig$fieldNa3.baseReference) || (cfg === null || cfg === void 0 ? void 0 : (_cfg$fieldNames3 = cfg.fieldNames) === null || _cfg$fieldNames3 === void 0 ? void 0 : _cfg$fieldNames3.baseReference) || '__i18n_base'
    },
    languages: (schemaConfig === null || schemaConfig === void 0 ? void 0 : schemaConfig.languages) || (cfg === null || cfg === void 0 ? void 0 : cfg.languages) || []
  };
}

var buildDocId = function buildDocId(id, lang) {
  var config = getConfig();
  if (config.idStructure === IdStructure.DELIMITER) return "".concat(id).concat(I18nDelimiter).concat(lang || '*');
  return "".concat(I18nPrefix, ".").concat(id, ".").concat(lang || '*');
};

var normalizeLanguageList = function normalizeLanguageList(languages) {
  return languages.map(function (l) {
    if (typeof l === 'string') {
      var langCult = LanguageCultures.find(function (x) {
        return x.value === l;
      });
      if (langCult) return {
        title: langCult.title,
        id: l
      };
      return {
        title: l,
        id: l
      };
    }

    if ('name' in l) {
      console.warn("The \"name\" field in your language configuration is deprecated, please replace it with \"id\".");
      return {
        title: l.title,
        id: l.name
      };
    }

    return {
      title: l.title,
      id: l.id
    };
  });
};

var getBaseLanguage = function getBaseLanguage(langs, base) {
  if (base) return langs.find(function (l) {
    return l.id === base;
  }) || null;
  return langs.length > 0 ? langs[0] : null;
};

var getSanityClient = function getSanityClient() {
  return client__default["default"].withConfig({
    apiVersion: "2021-10-01"
  });
};

var getLanguagesFromOption = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator__default["default"]( /*#__PURE__*/_regeneratorRuntime__default["default"].mark(function _callee2(langs, document) {
    var languages, possiblePromise;
    return _regeneratorRuntime__default["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.t0 = normalizeLanguageList;
            _context2.next = 3;
            return _asyncToGenerator__default["default"]( /*#__PURE__*/_regeneratorRuntime__default["default"].mark(function _callee() {
              var r, value;
              return _regeneratorRuntime__default["default"].wrap(function _callee$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      if (!Array.isArray(langs)) {
                        _context.next = 2;
                        break;
                      }

                      return _context.abrupt("return", langs);

                    case 2:
                      _context.next = 4;
                      return getSanityClient().fetch(langs.query);

                    case 4:
                      r = _context.sent;
                      value = langs.value;

                      if (!(typeof value === 'string')) {
                        _context.next = 8;
                        break;
                      }

                      return _context.abrupt("return", r.map(function (l) {
                        return objectSafeGet(l, value);
                      }));

                    case 8:
                      return _context.abrupt("return", r.map(function (l) {
                        // @deprecated
                        if ('name' in value) {
                          return {
                            name: objectSafeGet(l, value.name),
                            title: objectSafeGet(l, value.title)
                          };
                        }

                        return {
                          id: objectSafeGet(l, value.id),
                          title: objectSafeGet(l, value.title)
                        };
                      }));

                    case 9:
                    case "end":
                      return _context.stop();
                  }
                }
              }, _callee);
            }))();

          case 3:
            _context2.t1 = _context2.sent;
            languages = (0, _context2.t0)(_context2.t1);

            if (!languagesLoaderFn__default["default"]) {
              _context2.next = 8;
              break;
            }

            possiblePromise = languagesLoaderFn__default["default"](languages, document);
            return _context2.abrupt("return", possiblePromise);

          case 8:
            return _context2.abrupt("return", languages);

          case 9:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function getLanguagesFromOption(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

var getLanguageFromId = function getLanguageFromId(id) {
  // subpath
  var rx = new RegExp("".concat(I18nPrefix, "\\.[^.]+\\.([^.]+)"));
  var match = id.match(rx);
  if (match && match.length === 2) return match[1]; // delimiter

  var split = id.split(I18nDelimiter);
  if (split.length > 1) return split[1];
  return null;
};

var getBaseIdFromId = function getBaseIdFromId(id) {
  var nonDraftId = id.replace(/^drafts\./, ''); // subpath

  var rx = new RegExp("".concat(I18nPrefix, "\\.([^.]+)\\.[^.]+"));
  var match = nonDraftId.match(rx);
  if (match && match.length === 2) return match[1]; // delimiter

  var split = nonDraftId.split(I18nDelimiter);
  if (split.length > 0) return split[0];
  return nonDraftId;
};

function useLanguages(document) {
  var config = React.useMemo(function () {
    return getConfig(document._type);
  }, [document._type]);

  var _useEditState = reactHooks.useEditState(document._id.replace(/^drafts\./, ''), document._type),
      draft = _useEditState.draft,
      published = _useEditState.published;

  var _useState = React.useState(false),
      _useState2 = _slicedToArray__default["default"](_useState, 2),
      pending = _useState2[0],
      setPending = _useState2[1];

  var _useState3 = React.useState([]),
      _useState4 = _slicedToArray__default["default"](_useState3, 2),
      languages = _useState4[0],
      setLanguages = _useState4[1];

  var loadOrReloadLanguages = React.useCallback( /*#__PURE__*/_asyncToGenerator__default["default"]( /*#__PURE__*/_regeneratorRuntime__default["default"].mark(function _callee() {
    var shouldReload, languageObjects;
    return _regeneratorRuntime__default["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            shouldReload = languages.length === 0 || shouldReloadFn__default["default"] && shouldReloadFn__default["default"](draft !== null && draft !== void 0 ? draft : published);

            if (!shouldReload) {
              _context.next = 8;
              break;
            }

            setPending(true);
            _context.next = 5;
            return getLanguagesFromOption(config.languages, draft !== null && draft !== void 0 ? draft : published);

          case 5:
            languageObjects = _context.sent;
            setLanguages(languageObjects);
            setPending(false);

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })), [draft, published, config, languages]);
  React.useEffect(function () {
    loadOrReloadLanguages();
  }, [draft, published, languages, config, loadOrReloadLanguages]);
  return [pending, languages];
}

var useIsomorphicEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;
function useManyObservables(observables) {
  var subscriptions = React.useRef([]);
  var isInitial = React.useRef(true);

  var _useState = React.useState(function () {
    var isSync = observables.map(function () {
      return true;
    });
    var syncValues = observables.map(function () {
      return null;
    });
    subscriptions.current = observables.map(function (observable, index) {
      return observable.subscribe(function (nextVal) {
        syncValues[index] = nextVal;

        if (!isSync[index]) {
          setState(_toConsumableArray__default["default"](syncValues));
        }

        isSync[index] = false;
      });
    });
    return syncValues;
  }),
      _useState2 = _slicedToArray__default["default"](_useState, 2),
      value = _useState2[0],
      setState = _useState2[1];

  useIsomorphicEffect(function () {
    // when the observable changes after initial (possibly sync render)
    if (!isInitial.current) {
      subscriptions.current = observables.map(function (observable, index) {
        return observable.subscribe(function (nextVal) {
          value[index] = nextVal;
          setState(_toConsumableArray__default["default"](value));
        });
      });
    }

    isInitial.current = false;
    return function () {
      subscriptions.current.forEach(function (sub) {
        sub.unsubscribe();
      });
      subscriptions.current = [];
    };
  }, [observables]);
  return value;
}

function useManyEditStates(documentIds, documentType) {
  var observables = React.useMemo(function () {
    return documentIds.map(function (id) {
      return documentStore__default["default"].pair.editState(id, documentType);
    });
  }, [documentIds, documentType]);
  return useManyObservables(observables);
}

var baseToTop = function baseToTop(a, b) {
  var _a$isBase, _b$isBase;

  return Number((_a$isBase = a.isBase) !== null && _a$isBase !== void 0 ? _a$isBase : 0) - Number((_b$isBase = b.isBase) !== null && _b$isBase !== void 0 ? _b$isBase : 0);
};

var LanguageSelectLabel = function LanguageSelectLabel(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/React__default["default"].createElement(ui.Box, {
    padding: 2
  }, /*#__PURE__*/React__default["default"].createElement(ui.Text, {
    muted: true,
    size: 1
  }, children));
};

var objectOmit = omit;

/*
  var obj = {a: 3, b: 5, c: 9};
  omit(obj, ['a', 'c']); // {b: 5}
  omit(obj, a, c); // {b: 5}
  omit(obj, ['a', 'b', 'd']); // {c: 9}
  omit(obj, ['a', 'a']); // {b: 5, c: 9}
*/

function omit(obj, remove) {
  var result = {};
  if (typeof remove === 'string') {
    remove = [].slice.call(arguments, 1);
  }
  for (var prop in obj) {
    if (!obj.hasOwnProperty || obj.hasOwnProperty(prop)) {
      if (remove.indexOf(prop) === -1) {
        result[prop] = obj[prop];
      }
    }
  }
  return result;
}

var SplitPaneIcon = /*#__PURE__*/React.forwardRef(function UndoIcon(props, ref) {
  return /*#__PURE__*/React__default["default"].createElement("svg", _extends__default["default"]({
    "data-sanity-icon": "splitPane",
    width: "1em",
    height: "1em",
    viewBox: "0 0 25 25",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    ref: ref
  }, props), /*#__PURE__*/React__default["default"].createElement("path", {
    d: "M10.5 5.5V19.5M13 12.5H15.5M18 12.5H15.5M15.5 12.5V15M15.5 12.5V10M4.5 5.5H20.5V19.5H4.5V5.5Z",
    stroke: "currentColor",
    strokeWidth: 1.2
  }));
});

var LanguageSelectContext = /*#__PURE__*/React.createContext({
  currentDocumentId: null,
  currentDocumentType: null,
  baseLanguage: null,
  currentLanguage: null
});

var _templateObject$1, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;

function ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var rotate = styled.keyframes(_templateObject$1 || (_templateObject$1 = _taggedTemplateLiteral__default["default"](["\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n"])));
var ListItemSpinner = styled__default["default"](icons.SpinnerIcon)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral__default["default"](["\n  animation: ", " 500ms linear infinite;\n"])), rotate);
var ListItemBadge = styled__default["default"](ui.Text)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral__default["default"](["\n  margin-left: ", ";\n  margin-right: 35px;\n  margin-top: 1px;\n\n  & > span {\n    display: inline-block;\n    vertical-align: middle;\n  }\n"])), function (_ref) {
  var theme = _ref.theme;
  return "".concat(theme.sanity.space[2], "px");
});
var ListItemSplitButton = styled__default["default"](ui.Button)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral__default["default"](["\n  display: none;\n  flex-shrink: 0;\n  margin-left: 4px;\n\n  & svg {\n    display: block;\n    color: ", ";\n  }\n\n  ", "\n"])), color.hues.gray[700].hex, function (_ref2) {
  var theme = _ref2.theme;
  return styled.css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral__default["default"](["\n    @media (min-width: ", "em) {\n      display: block;\n    }\n  "])), theme.sanity.media[1] / 16);
});

var MenuItemButton = function MenuItemButton(props) {
  return /*#__PURE__*/React__default["default"].createElement("button", _extends__default["default"]({
    type: "button"
  }, props));
};

var MenuItemSelectedButton = styled__default["default"].button(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral__default["default"](["\n  color: ", ";\n  background-color: ", ";\n\n  span {\n    color: ", ";\n  }\n"])), function (_ref3) {
  var theme = _ref3.theme;
  return theme.sanity.color.button["default"].primary.enabled.fg;
}, function (_ref4) {
  var theme = _ref4.theme;
  return theme.sanity.color.button["default"].primary.enabled.bg;
}, function (_ref5) {
  var theme = _ref5.theme;
  return theme.sanity.color.button["default"].primary.enabled.fg;
});
var LanguageSelectListItem = function LanguageSelectListItem(_ref6) {
  var status = _ref6.status,
      language = _ref6.language;
  var toast = ui.useToast();

  var _React$useContext = React__default["default"].useContext(LanguageSelectContext),
      currentDocumentId = _React$useContext.currentDocumentId,
      currentDocumentType = _React$useContext.currentDocumentType,
      baseLanguage = _React$useContext.baseLanguage;

  if (!currentDocumentId || !currentDocumentType) {
    throw new Error('No document in view');
  }

  var routerContext = React__default["default"].useContext(RouterContext.RouterContext);

  var _usePaneRouter = deskTool.usePaneRouter(),
      routerPanesState = _usePaneRouter.routerPanesState,
      groupIndex = _usePaneRouter.groupIndex,
      replaceCurrent = _usePaneRouter.replaceCurrent;

  var _React$useState = React__default["default"].useState(false),
      _React$useState2 = _slicedToArray__default["default"](_React$useState, 2),
      pending = _React$useState2[0],
      setPending = _React$useState2[1];

  var config = React__default["default"].useMemo(function () {
    return getConfig(currentDocumentType);
  }, [currentDocumentType]);
  var baseId = React__default["default"].useMemo(function () {
    return getBaseIdFromId(currentDocumentId);
  }, [currentDocumentId]);
  var flagCode = React__default["default"].useMemo(function () {
    return language.id.split(/[_-]/).pop();
  }, [language.id]);
  var FlagIcon = React__default["default"].useMemo(function () {
    return function FlagIconComponent(props) {
      return /*#__PURE__*/React__default["default"].createElement(SingleFlag, _extends__default["default"]({
        code: flagCode,
        langCulture: language.id
      }, props));
    };
  }, [flagCode, language]);
  var translatedId = React__default["default"].useMemo(function () {
    return language.id === (baseLanguage === null || baseLanguage === void 0 ? void 0 : baseLanguage.id) ? baseId : buildDocId(baseId, language.id);
  }, [baseId, language.id, baseLanguage]);
  var baseDocumentEditState = reactHooks.useEditState(baseId, currentDocumentType);
  var baseTranslationBadgeLabel = React__default["default"].useMemo(function () {
    if (language.isBase) {
      if (language.title.length >= 20) {
        return UiMessages.base.split(' ')[0];
      }

      return UiMessages.base;
    }

    return null;
  }, [language]);
  var openDocumentInCurrentPane = React__default["default"].useCallback(function (id, type) {
    replaceCurrent({
      id: id,
      params: {
        type: type
      }
    });
  }, [replaceCurrent]);
  var openDocumentInSidePane = React__default["default"].useCallback(function (id, type) {
    var panes = _toConsumableArray__default["default"](routerPanesState);

    panes.splice(groupIndex + 1, 0, [{
      id: id,
      params: {
        type: type
      }
    }]);
    var href = routerContext.resolvePathFromState({
      panes: panes
    });
    routerContext.navigateUrl(href);
  }, [routerContext, routerPanesState, groupIndex]);
  var handleCreateClick = React__default["default"].useCallback( /*#__PURE__*/_asyncToGenerator__default["default"]( /*#__PURE__*/_regeneratorRuntime__default["default"].mark(function _callee() {
    var baseDocument, langFieldName;
    return _regeneratorRuntime__default["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            setPending(true);
            baseDocument = baseDocumentEditState.draft || baseDocumentEditState.published;
            langFieldName = config.fieldNames.lang;
            _context.next = 6;
            return getSanityClient().createIfNotExists(_objectSpread$2(_objectSpread$2({}, baseDocument ? objectOmit(baseDocument, [config.fieldNames.references]) : {}), {}, _defineProperty__default["default"]({
              _id: "drafts.".concat(translatedId),
              _type: currentDocumentType
            }, langFieldName, language.id)));

          case 6:
            toast.push({
              closable: true,
              status: 'success',
              title: UiMessages.translationCreatedToast.title(language.title),
              description: baseLanguage ? UiMessages.translationCreatedToast.description(baseLanguage.title) : undefined
            });
            openDocumentInCurrentPane(translatedId, currentDocumentType);
            _context.next = 13;
            break;

          case 10:
            _context.prev = 10;
            _context.t0 = _context["catch"](0);
            toast.push({
              closable: true,
              status: 'error',
              title: _context.t0.toString()
            });

          case 13:
            _context.prev = 13;
            setPending(false);
            return _context.finish(13);

          case 16:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[0, 10, 13, 16]]);
  })), [toast, language.id, language.title, baseLanguage, translatedId, currentDocumentType, config.fieldNames.lang, config.fieldNames.references, openDocumentInCurrentPane, baseDocumentEditState.draft, baseDocumentEditState.published]);
  var handleOpenClick = React__default["default"].useCallback(function () {
    openDocumentInCurrentPane(translatedId, currentDocumentType);
  }, [openDocumentInCurrentPane, translatedId, currentDocumentType]);
  var handleOpenInSidePaneClick = React__default["default"].useCallback(function () {
    openDocumentInSidePane(translatedId, currentDocumentType);
  }, [openDocumentInSidePane, translatedId, currentDocumentType]);

  if (status === 'missing') {
    return /*#__PURE__*/React__default["default"].createElement(ui.MenuItem, {
      as: MenuItemButton,
      "data-as": "button",
      disabled: pending,
      icon: pending ? ListItemSpinner : icons.AddIcon,
      text: language.title,
      onClick: handleCreateClick
    });
  }

  return /*#__PURE__*/React__default["default"].createElement(ui.Flex, null, /*#__PURE__*/React__default["default"].createElement(ui.MenuItem, {
    as: language.isCurrentLanguage ? MenuItemSelectedButton : MenuItemButton,
    "data-as": "button",
    "data-selected": language.isCurrentLanguage,
    selected: language.isCurrentLanguage,
    icon: FlagIcon,
    iconRight: !!baseTranslationBadgeLabel && /*#__PURE__*/React__default["default"].createElement(ListItemBadge, null, /*#__PURE__*/React__default["default"].createElement(ui.Badge, null, baseTranslationBadgeLabel)),
    text: language.title,
    onClick: handleOpenClick
  }), !language.isCurrentLanguage && /*#__PURE__*/React__default["default"].createElement(ListItemSplitButton, {
    type: "button",
    tone: "default",
    mode: "bleed",
    padding: 2,
    onClick: handleOpenInSidePaneClick
  }, /*#__PURE__*/React__default["default"].createElement(SplitPaneIcon, {
    width: 19,
    height: 19
  })));
};

var _templateObject;

function ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Divider = styled__default["default"](ui.Box)(_templateObject || (_templateObject = _taggedTemplateLiteral__default["default"](["\n  border-bottom: 1px solid var(--card-shadow-outline-color);\n"])));
var LanguageSelectList = function LanguageSelectList(_ref) {
  var draftLanguageObjects = _ref.draftLanguageObjects,
      publishedLanguageObjects = _ref.publishedLanguageObjects,
      missingLanguageObjects = _ref.missingLanguageObjects;
  var showDivider = React__default["default"].useMemo(function () {
    return Boolean(!!(draftLanguageObjects.length || publishedLanguageObjects.length) && missingLanguageObjects.length);
  }, [draftLanguageObjects, publishedLanguageObjects, missingLanguageObjects]);
  var existingLanguageObjects = React__default["default"].useMemo(function () {
    return [].concat(_toConsumableArray__default["default"](draftLanguageObjects.map(function (lang) {
      return _objectSpread$1(_objectSpread$1({}, lang), {}, {
        status: 'draft'
      });
    })), _toConsumableArray__default["default"](publishedLanguageObjects.map(function (lang) {
      return _objectSpread$1(_objectSpread$1({}, lang), {}, {
        status: 'published'
      });
    }))).sort(baseToTop).reverse();
  }, [draftLanguageObjects, publishedLanguageObjects]);
  return /*#__PURE__*/React__default["default"].createElement(ui.Box, null, !!existingLanguageObjects.length && /*#__PURE__*/React__default["default"].createElement(ui.Box, null, /*#__PURE__*/React__default["default"].createElement(LanguageSelectLabel, null, UiMessages.languageSelect.listLabels.existing), /*#__PURE__*/React__default["default"].createElement(ui.Grid, {
    columns: 1,
    gap: 1
  }, existingLanguageObjects.map(function (language) {
    return /*#__PURE__*/React__default["default"].createElement(LanguageSelectListItem, {
      key: language.id,
      status: language.status,
      language: language
    });
  }))), showDivider && /*#__PURE__*/React__default["default"].createElement(Divider, {
    marginY: 1
  }), !!missingLanguageObjects.length && /*#__PURE__*/React__default["default"].createElement(ui.Box, null, /*#__PURE__*/React__default["default"].createElement(LanguageSelectLabel, null, UiMessages.languageSelect.listLabels.missing), /*#__PURE__*/React__default["default"].createElement(ui.Grid, {
    columns: 1,
    gap: 1
  }, missingLanguageObjects.map(function (language) {
    return /*#__PURE__*/React__default["default"].createElement(LanguageSelectListItem, {
      key: language.id,
      status: "missing",
      language: language
    });
  }))));
};

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var POPOVER_PROPS = {
  constrainSize: true,
  placement: 'bottom',
  portal: true
};
var LanguageSelect = function LanguageSelect(_ref) {
  var _currentLanguageObjec, _currentLanguageObjec2;

  var schemaType = _ref.schemaType,
      document = _ref.document;
  var config = React__default["default"].useMemo(function () {
    return getConfig(schemaType.name);
  }, [schemaType.name]);

  var _useLanguages = useLanguages(document),
      _useLanguages2 = _slicedToArray__default["default"](_useLanguages, 2),
      pending = _useLanguages2[0],
      languages = _useLanguages2[1];

  var baseLanguage = React__default["default"].useMemo(function () {
    return getBaseLanguage(languages, config.base);
  }, [languages, config.base]);
  var currentLanguageCode = React__default["default"].useMemo(function () {
    return getLanguageFromId(document._id) || (baseLanguage ? baseLanguage.id : null);
  }, [document._id, baseLanguage]);
  var currentLanguageObject = React__default["default"].useMemo(function () {
    return languages.find(function (lang) {
      return lang.id === currentLanguageCode;
    });
  }, [languages, currentLanguageCode]);
  var currentLanguageFlagCode = React__default["default"].useMemo(function () {
    return currentLanguageCode === null || currentLanguageCode === void 0 ? void 0 : currentLanguageCode.split(/[-_]/).pop();
  }, [currentLanguageCode]);
  var editStateIds = React__default["default"].useMemo(function () {
    var baseId = getBaseIdFromId(document._id);
    return languages.map(function (lang) {
      return lang === baseLanguage ? baseId : buildDocId(baseId, lang.id);
    });
  }, [baseLanguage, languages, document._id]);
  var editStates = useManyEditStates(editStateIds, document._type);
  var languagesObjects = React__default["default"].useMemo(function () {
    var editStatePerLanguage = new Map();
    editStates.forEach(function (state) {
      var _state$draft;

      var doc = (_state$draft = state === null || state === void 0 ? void 0 : state.draft) !== null && _state$draft !== void 0 ? _state$draft : state === null || state === void 0 ? void 0 : state.published;
      var lang = objectSafeGet(doc !== null && doc !== void 0 ? doc : {}, config.fieldNames.lang);
      var isBase = doc && doc._id.replace(/^drafts\./, '') === getBaseIdFromId(doc._id);

      if (lang) {
        editStatePerLanguage.set(lang, state);
      } else if (isBase && baseLanguage !== null && baseLanguage !== void 0 && baseLanguage.id) {
        editStatePerLanguage.set(baseLanguage.id, state);
      }
    });
    var draftLanguageObjects = [];
    var publishedLanguageObjects = [];
    var missingLanguageObjects = [];
    languages.forEach(function (lang, index) {
      var extendedObject = _objectSpread(_objectSpread({}, lang), {}, {
        isBase: baseLanguage ? lang.id === baseLanguage.id : index === 0,
        isCurrentLanguage: lang.id === currentLanguageCode
      });

      var editState = editStatePerLanguage.get(lang.id);

      if (editState !== null && editState !== void 0 && editState.published) {
        publishedLanguageObjects.push(extendedObject);
      } else if (editState !== null && editState !== void 0 && editState.draft) {
        draftLanguageObjects.push(extendedObject);
      } else {
        missingLanguageObjects.push(extendedObject);
      }
    });
    return {
      draftLanguageObjects: draftLanguageObjects,
      publishedLanguageObjects: publishedLanguageObjects,
      missingLanguageObjects: missingLanguageObjects
    };
  }, [config, languages, baseLanguage, editStates, currentLanguageCode]);

  if (!currentLanguageObject || !currentLanguageCode || pending || languages.length === 0) {
    return /*#__PURE__*/React__default["default"].createElement(ui.Button, {
      disabled: true,
      mode: "bleed",
      padding: 3,
      loading: pending,
      iconRight: icons.ChevronDownIcon,
      text: UiMessages.languageSelect.placeholder
    });
  }

  return /*#__PURE__*/React__default["default"].createElement(LanguageSelectContext.Provider, {
    value: {
      baseLanguage: baseLanguage,
      currentLanguage: currentLanguageObject,
      currentDocumentType: document._type,
      currentDocumentId: document._id
    }
  }, /*#__PURE__*/React__default["default"].createElement(ui.MenuButton, {
    id: "document-internationalization/language-select",
    popover: POPOVER_PROPS,
    button: /*#__PURE__*/React__default["default"].createElement(ui.Button, {
      mode: "bleed",
      icon: /*#__PURE__*/React__default["default"].createElement(SingleFlag, {
        code: currentLanguageFlagCode,
        langCulture: currentLanguageCode
      }),
      iconRight: icons.ChevronDownIcon,
      padding: 3,
      title: (_currentLanguageObjec = currentLanguageObject.title) !== null && _currentLanguageObjec !== void 0 ? _currentLanguageObjec : currentLanguageObject.id,
      text: (_currentLanguageObjec2 = currentLanguageObject.title) !== null && _currentLanguageObjec2 !== void 0 ? _currentLanguageObjec2 : currentLanguageObject.id
    }),
    menu: /*#__PURE__*/React__default["default"].createElement(ui.Menu, null, /*#__PURE__*/React__default["default"].createElement(LanguageSelectList, languagesObjects))
  }));
};

var LanguageSelectContainer = function LanguageSelectContainer(_ref) {
  var _documentContext$disp;

  var schemaType = _ref.schemaType;
  var documentContext = React__default["default"].useContext(DocumentPaneContext.DocumentPaneContext);

  if (schemaType && (_documentContext$disp = documentContext.displayed) !== null && _documentContext$disp !== void 0 && _documentContext$disp._id) {
    return /*#__PURE__*/React__default["default"].createElement(LanguageSelect, {
      schemaType: schemaType,
      document: documentContext.displayed
    });
  }

  return null;
};

module.exports = LanguageSelectContainer;
//# sourceMappingURL=index.js.map
